/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import ConexaoPostgres.Conexao;
import codigo.PermissaoAcesso;
import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author USUARIO
 */
public class TelaVisualizarFuncionarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaVisualizarFuncionarios
     */
    String tipoVisualizacao;

    public TelaVisualizarFuncionarios() {
        initComponents();
    }

    /**
     * Dimensionar a tela no centro.
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void setTipoVisualizacao(String tipo) {
        this.tipoVisualizacao = tipo;
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCursos = new javax.swing.JTable();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Funcionários Administrativos");

        jButtonSair.setText("SAIR");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jTableCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCursos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTableCursosComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCursos);

        jScrollPane1.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(489, 489, 489)
                .addComponent(jLabel1)
                .addGap(0, 508, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        /*preenche informações das funcionarios*/
        if (this.tipoVisualizacao.equals("ADMINISTRATIVO")) {
            Conexao con = new Conexao();
            String dadosCurso = "SELECT F.cpf_func AS CPF, F.nome AS Nome, F.data_de_admissao AS Data_Admissão "
                    + //modifica os nomes das colunas na visualização
                    "FROM funcionario F, atendente A "
                    + "WHERE  F.id_aut=" + PermissaoAcesso.getIdAutoEscola()+ " AND "+ "F.cpf_func=A.cpf_func";
            PreparedStatement ps = null;
            ResultSet rs = null;
            System.out.println("id_aut=" + PermissaoAcesso.getIdAutoEscola());
            try {
                ps = con.getConexao().prepareStatement(dadosCurso);
                rs = ps.executeQuery();

                jTableCursos.setModel(DbUtils.resultSetToTableModel(rs));
                jTableCursos.setRowHeight(30);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaDadosCFC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(this.tipoVisualizacao.equals("PRATICO")){
            Conexao con = new Conexao();
            String dadosCurso = "SELECT F.cpf_func AS CPF, F.nome AS Nome, F.data_de_admissao AS Data_Admissão "
                    + //modifica os nomes das colunas na visualização
                    "FROM funcionario F, instrutor I "
                    + "WHERE  F.id_aut=" + PermissaoAcesso.getIdAutoEscola()+ " AND "+ "F.cpf_func=I.cpf_func" + " AND "+"I.tipo='"+this.tipoVisualizacao+"'";
            PreparedStatement ps = null;
            ResultSet rs = null;
            System.out.println("id_aut=" + PermissaoAcesso.getIdAutoEscola());
            try {
                ps = con.getConexao().prepareStatement(dadosCurso);
                rs = ps.executeQuery();

                jTableCursos.setModel(DbUtils.resultSetToTableModel(rs));
                jTableCursos.setRowHeight(30);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaDadosCFC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         if(this.tipoVisualizacao.equals("TEORICO")){
            Conexao con = new Conexao();
            String dadosCurso = "SELECT F.cpf_func AS CPF, F.nome AS Nome, F.data_de_admissao AS Data_Admissão "
                    + //modifica os nomes das colunas na visualização
                    "FROM funcionario F, instrutor I "
                    + "WHERE  F.id_aut=" + PermissaoAcesso.getIdAutoEscola()+ " AND "+ "F.cpf_func=I.cpf_func" + " AND "+"I.tipo='"+this.tipoVisualizacao+"'";
            PreparedStatement ps = null;
            ResultSet rs = null;
            System.out.println("id_aut=" + PermissaoAcesso.getIdAutoEscola());
            try {
                ps = con.getConexao().prepareStatement(dadosCurso);
                rs = ps.executeQuery();

                jTableCursos.setModel(DbUtils.resultSetToTableModel(rs));
                jTableCursos.setRowHeight(30);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaDadosCFC.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_formComponentShown

    private void jTableCursosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTableCursosComponentShown

    }//GEN-LAST:event_jTableCursosComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCursos;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import ConexaoPostgres.Conexao;
import codigo.OperacoesBancoDeDados;
import codigo.PermissaoAcesso;
import java.awt.Dimension;

import java.sql.ResultSet;
import java.sql.SQLException;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class TelaCadastrarAlunos extends javax.swing.JInternalFrame {

    public String tipoProcura;
    public String procura;

    /**
     * Creates new form TelaCadastroAlunos
     */
    public TelaCadastrarAlunos() {
        initComponents();

        //preencher com os cursos existentes
        int aux = 0;
        ResultSet rs = null;
        Conexao con = new Conexao();
        String verificaMatriz;

        verificaMatriz = "SELECT nome "
                + "FROM cursos";

        rs = con.executaBusca(verificaMatriz);

        try {
            while (rs.next()) {
                jComboBoxCursos.insertItemAt(rs.getString("nome"), aux);
                aux++;

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
            //Logger.getLogger(TelaCadastrarCurso.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDadosPessoais = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabeldataEmissao = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelDataNasc = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jFCPF = new javax.swing.JFormattedTextField();
        jComboBoxSexo = new javax.swing.JComboBox<>();
        jTextNome = new javax.swing.JTextField();
        jTextIdentidade = new javax.swing.JTextField();
        jTextOrgao = new javax.swing.JTextField();
        jFDataEmissao = new javax.swing.JFormattedTextField();
        jFDataNasc = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanelContato = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextRua = new javax.swing.JTextField();
        jTextNumero = new javax.swing.JTextField();
        jTextCEP = new javax.swing.JTextField();
        jTextBairro = new javax.swing.JTextField();
        jTextCidade = new javax.swing.JTextField();
        jFTelefone1 = new javax.swing.JFormattedTextField();
        jFTelefone2 = new javax.swing.JFormattedTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAtualizar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxHablitacaoDesejada = new javax.swing.JComboBox<>();
        jLabelDataMatricula = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jFNumeroAulas = new javax.swing.JFormattedTextField();
        jFDataMatricula = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxCursos = new javax.swing.JComboBox<>();

        setClosable(true);
        setResizable(true);
        setTitle("Cadastro de Aluno");

        jPanelDadosPessoais.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Pessoais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanelDadosPessoais.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CPF:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nome:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Identidade:");

        jLabeldataEmissao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabeldataEmissao.setText("Data de emissão:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Órgao Expedidor:");

        jLabelDataNasc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDataNasc.setText("Data Nascimento:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Sexo:");

        try {
            jFCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE", "F", "M" }));

        try {
            jFDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/placas.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanelDadosPessoaisLayout = new javax.swing.GroupLayout(jPanelDadosPessoais);
        jPanelDadosPessoais.setLayout(jPanelDadosPessoaisLayout);
        jPanelDadosPessoaisLayout.setHorizontalGroup(
            jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFCPF)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel9)
                        .addGap(2, 2, 2)
                        .addComponent(jComboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextNome)
                        .addGap(182, 182, 182))
                    .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                        .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabelDataNasc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextOrgao, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabeldataEmissao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(115, Short.MAX_VALUE))
                    .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanelDadosPessoaisLayout.setVerticalGroup(
            jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextOrgao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeldataEmissao)
                    .addComponent(jFDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDataNasc)
                    .addComponent(jFDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanelContato.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Rua:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Número:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Bairro:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Cidade:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Telefone 1:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Telefone 2:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("CEP:");

        jTextRua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRuaActionPerformed(evt);
            }
        });

        try {
            jFTelefone1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFTelefone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonAtualizar.setText("Atualizar");
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tipo de Habilitação desejada:");

        jComboBoxHablitacaoDesejada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "AB", "B", "C", "D", "E" }));

        jLabelDataMatricula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDataMatricula.setText("Data da Matrícula:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Número de Aulas:");

        try {
            jFNumeroAulas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFDataMatricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFDataMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFDataMatriculaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Curso:");

        jComboBoxCursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE" }));
        jComboBoxCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCursosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelContatoLayout = new javax.swing.GroupLayout(jPanelContato);
        jPanelContato.setLayout(jPanelContatoLayout);
        jPanelContatoLayout.setHorizontalGroup(
            jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContatoLayout.createSequentialGroup()
                        .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10)
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jFTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jFTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextCEP))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextRua, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBoxHablitacaoDesejada, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContatoLayout.createSequentialGroup()
                                    .addComponent(jLabelDataMatricula)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jFDataMatricula)
                                    .addGap(117, 117, 117)))
                            .addGroup(jPanelContatoLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFNumeroAulas, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelContatoLayout.createSequentialGroup()
                                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelContatoLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelContatoLayout.setVerticalGroup(
            jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jTextNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jFTelefone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jFTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxHablitacaoDesejada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBoxCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDataMatricula)
                    .addComponent(jFDataMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jFNumeroAulas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDadosPessoais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDadosPessoais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextRuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRuaActionPerformed

    }//GEN-LAST:event_jTextRuaActionPerformed
    /**
     * DEFINE A VISIBILIDADE DOS BOTÕES.
     *
     * @param b
     */
    public void botoes(boolean b) {
        jButtonAtualizar.setVisible(b);
        jButtonExcluir.setVisible(b);
        jButtonSalvar.setVisible(!b);
    }

    public void procura(String tipo, String procura) {
        jButtonAtualizar.setVisible(false);
        jButtonExcluir.setVisible(false);
        jButtonSalvar.setVisible(false);
        jButtonCancelar.setText("OK");
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;

        this.tipoProcura = tipo;
        this.procura = procura;

        String verificaMatriz, verificaMatriz2;
        String matricula = null;
        int aux = 0;
        ResultSet rs = null;
        ResultSet rs2 = null;
        Conexao con = new Conexao();
        Conexao con2 = new Conexao();

        if (this.tipoProcura.equals("CPF")) {
            verificaMatriz = "SELECT * "
                    + "FROM aluno "
                    + "WHERE cpf=" + "'" + procura + "'";

            rs = con.executaBusca(verificaMatriz);

            try {
                if (rs.next()) {

                    this.setVisible(true);
                    jFCPF.setText(rs.getString("cpf"));
                    jTextNome.setText(rs.getString("nome"));
                    jTextIdentidade.setText(rs.getString("car_numero"));
                    jFDataEmissao.setText(rs.getString("car_data_de_emissao"));
                    String d = (rs.getString("data_nasc"));

                    System.out.println("DATA NASCIMENTO: " + d);
                    jComboBoxHablitacaoDesejada.setSelectedItem(rs.getString("tipo_habilitacao"));
                    jFDataNasc.setText(rs.getString("data_nasc"));
                    jComboBoxSexo.setSelectedItem(rs.getString("sexo"));
                    jTextOrgao.setText(rs.getString("car_orgao_expedidor"));

                    jTextRua.setText(rs.getString("end_rua"));
                    jTextBairro.setText(rs.getString("end_bairro"));
                    jTextNumero.setText(rs.getString("end_numero"));
                    jTextCEP.setText(rs.getString("end_cep"));
                    jTextCidade.setText(rs.getString("end_cidade"));

                    jFTelefone1.setText(rs.getString("tel_telefone_1"));
                    jFTelefone2.setText(rs.getString("tel_telefone_2"));
                    matricula = rs.getString("matricula");
                    aux = 1;
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }

            verificaMatriz2 = "SELECT * "
                    + "FROM matriculado "
                    + "WHERE matricula = '" + matricula + "'";

            rs2 = con2.executaBusca(verificaMatriz2);
            String curso = null;
            try {
                if (rs2.next()) {
                    jFNumeroAulas.setText(rs2.getString("numero_de_aulas"));
                    jFDataMatricula.setText(rs2.getString("data_da_matricula"));
                    curso = rs2.getString("id_curso");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }
            verificaMatriz2 = "SELECT * "
                    + "FROM cursos "
                    + "WHERE id_curso= '" + curso + "'";

            con2 = new Conexao();
            rs2 = con2.executaBusca(verificaMatriz2);

            try {
                if (rs2.next()) {
                    jComboBoxCursos.setSelectedItem(rs2.getString("nome"));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        //SE O TIPO PROCURADO FOR MATRICULA
        if (this.tipoProcura.equals("MATRICULA")) {
            verificaMatriz = "SELECT * "
                    + "FROM aluno "
                    + "WHERE matricula=" + "'" + procura + "'";

            rs = con.executaBusca(verificaMatriz);

            try {
                if (rs.next()) {

                    this.setVisible(true);
                    String n = rs.getString("cpf");
                    System.out.println("Saida: " + n + " :SAida");
                    jFCPF.setText(rs.getString("cpf"));
                    jTextNome.setText(rs.getString("nome"));
                    jTextIdentidade.setText(rs.getString("car_numero"));
                    jFDataEmissao.setText(rs.getString("car_data_de_emissao"));
                    String d = (rs.getString("data_nasc"));
                    System.out.println("DATA NASCIMENTO: " + d);
                    jFDataNasc.setText(rs.getString("data_nasc"));
                    jComboBoxSexo.setSelectedItem(rs.getString("sexo"));
                    jTextOrgao.setText(rs.getString("car_orgao_expedidor"));

                    jTextRua.setText(rs.getString("end_rua"));
                    jTextBairro.setText(rs.getString("end_bairro"));
                    jTextNumero.setText(rs.getString("end_numero"));
                    jTextCEP.setText(rs.getString("end_cep"));
                    jTextCidade.setText(rs.getString("end_cidade"));

                    jFTelefone1.setText(rs.getString("tel_telefone_1"));
                    jFTelefone2.setText(rs.getString("tel_telefone_2"));
                    matricula = rs.getString("matricula");

                    aux = 1;
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }
            verificaMatriz2 = "SELECT * "
                    + "FROM matriculado "
                    + "WHERE matricula = '" + matricula + "'";

            rs2 = con2.executaBusca(verificaMatriz);
            String curso = null;
            try {
                if (rs2.next()) {
                    jFNumeroAulas.setText(rs2.getString("numero_de_aulas"));
                    jFDataMatricula.setText(rs2.getString("data_da_matricula"));
                    curso = rs2.getString("id_curso");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }
            verificaMatriz2 = "SELECT * "
                    + "FROM cursos "
                    + "WHERE id_curso= '" + curso + "'";

            con2 = new Conexao();
            rs2 = con2.executaBusca(verificaMatriz);

            try {
                if (rs2.next()) {
                    jComboBoxCursos.setSelectedItem(rs2.getString("nome"));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (aux == 0) {
            JOptionPane.showMessageDialog(null, "Este aluno não está cadastrado!!");
        }
    }

    public void AtualizarExcluir(String tipo, String procura) {
        jLabeldataEmissao.setVisible(false);
        jLabelDataNasc.setVisible(false);
        jLabelDataMatricula.setVisible(false);
        
        jFDataEmissao.setVisible(false);
        jFDataMatricula.setVisible(false);
        jFDataNasc.setVisible(false);
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date data = null;

        this.tipoProcura = tipo;
        this.procura = procura;
        System.out.println("Entrou aqui" + this.tipoProcura + this.procura);
        String verificaMatriz;

        int aux = 0;
        ResultSet rs = null;
        Conexao con = new Conexao();

        if (this.tipoProcura.equals("CPF")) {
            verificaMatriz = "SELECT * "
                    + "FROM aluno "
                    + "WHERE cpf=" + "'" + procura + "'";

            rs = con.executaBusca(verificaMatriz);
            String n;
            try {
                if (rs.next()) {
                    this.setVisible(true);
                    jFCPF.setText(rs.getString("cpf"));
                    jTextNome.setText(rs.getString("nome"));
                    jTextIdentidade.setText(rs.getString("car_numero"));
                    jFDataEmissao.setText(rs.getString("car_data_de_emissao"));
                    String d = (rs.getString("data_nasc"));

                    System.out.println("DATA NASCIMENTO: " + d);

                    jFDataNasc.setText(rs.getString("data_nasc"));
                    jComboBoxSexo.setSelectedItem(rs.getString("sexo"));
                    jTextOrgao.setText(rs.getString("car_orgao_expedidor"));

                    jTextRua.setText(rs.getString("end_rua"));
                    jTextBairro.setText(rs.getString("end_bairro"));
                    jTextNumero.setText(rs.getString("end_numero"));
                    jTextCEP.setText(rs.getString("end_cep"));
                    jTextCidade.setText(rs.getString("end_cidade"));

                    jFTelefone1.setText(rs.getString("tel_telefone_1"));
                    jFTelefone2.setText(rs.getString("tel_telefone_2"));
                    aux = 1;
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (this.tipoProcura.equals("MATRICULA")) {
            verificaMatriz = "SELECT * "
                    + "FROM aluno "
                    + "WHERE matricula=" + "'" + procura + "'";

            rs = con.executaBusca(verificaMatriz);

            try {
                if (rs.next()) {

                    this.setVisible(true);
                    String n = rs.getString("cpf");
                    System.out.println("Saida: " + n + " :SAida");
                    jFCPF.setText(rs.getString("cpf"));
                    jTextNome.setText(rs.getString("nome"));
                    jTextIdentidade.setText(rs.getString("car_numero"));
                    jFDataEmissao.setText(rs.getString("car_data_de_emissao"));
                    String d = (rs.getString("data_nasc"));
                    System.out.println("DATA NASCIMENTO: " + d);
                    jFDataNasc.setText(rs.getString("data_nasc"));
                    jComboBoxSexo.setSelectedItem(rs.getString("sexo"));
                    jTextOrgao.setText(rs.getString("car_orgao_expedidor"));

                    jTextRua.setText(rs.getString("end_rua"));
                    jTextBairro.setText(rs.getString("end_bairro"));
                    jTextNumero.setText(rs.getString("end_numero"));
                    jTextCEP.setText(rs.getString("end_cep"));
                    jTextCidade.setText(rs.getString("end_cidade"));

                    jFTelefone1.setText(rs.getString("tel_telefone_1"));
                    jFTelefone2.setText(rs.getString("tel_telefone_2"));

                    aux = 1;
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (aux == 0) {
            JOptionPane.showMessageDialog(null, "Este aluno não está cadastrado!!");
        }
    }

    /**
     * DEFINE A POSIÇÃO DA TELA.
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed

        String nome = jTextNome.getText();
        String cpf = jFCPF.getText();

        String identidade = jTextIdentidade.getText();
        String dataEm = jFDataEmissao.getText();
        String dataNasc = jFDataNasc.getText();
        String orgaoEx = jTextOrgao.getText();
        String sexo = jComboBoxSexo.getSelectedItem().toString();

        String rua = jTextRua.getText();
        String bairro = jTextBairro.getText();
        String numero = jTextNumero.getText();
        String CEP = jTextCEP.getText();
        String cidade = jTextCidade.getText();
        String tipoH = jComboBoxHablitacaoDesejada.getSelectedItem().toString();
        String telefone1 = jFTelefone1.getText();
        String telefone2 = jFTelefone2.getText();

        String dataMatricula = jFDataMatricula.getText();
        String numeroAulas = jFNumeroAulas.getText();
        String nomeCurso = jComboBoxCursos.getSelectedItem().toString();
        
        String idCurso = "";

        String matricula = "";
        int resultado, resultado2 = 0;
        int aux = 0;
        ResultSet rs = null;
        String nomeMatriz = "";
        Conexao con = new Conexao();
        String verificaMatriz, tabela, valores;
        String tabela2, valores2;

        //caso os campos estejam preenchidos
        if (!cpf.equals("   .   .   -  ") && !nome.isEmpty() && !identidade.isEmpty() && !rua.isEmpty() && !bairro.isEmpty()
                && !numero.isEmpty() && !CEP.isEmpty() && !cidade.isEmpty()) {

            verificaMatriz = "SELECT cpf "
                    + "FROM aluno";
            rs = con.executaBusca(verificaMatriz);

            try {
                while (rs.next()) {
                    //verifica se o cliente já está cadastrado
                    if (rs.getString("cpf").equals(cpf)) {
                        aux = 1;
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                //Logger.getLogger(TelaCadastrarCurso.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (aux == 1) {
                JOptionPane.showMessageDialog(null, "Este CPF já esta cadastrado!");
                jFCPF.setText("");
            } else {

                OperacoesBancoDeDados inserir = new OperacoesBancoDeDados();
                tabela = "aluno(matricula,tipo_habilitacao,cpf,nome,car_data_de_emissao,car_orgao_expedidor,car_numero, data_nasc,sexo, end_cep,end_rua, end_numero,end_bairro,end_cidade,tel_telefone_1, tel_telefone_2)";
                valores = "(" + "default" + ",'" + tipoH + "','" + cpf + "','" + nome + "','" + dataEm + "','" + orgaoEx + "','" + identidade + "','" + dataNasc + "','" + sexo + "','" + CEP + "','" + rua + "','" + numero + "','" + bairro + "','" + cidade + "','" + telefone1 + "','" + telefone2 + "')";

                resultado = inserir.inserirLinhasBD(tabela, valores);

                //capturar a matricula do aluno
                verificaMatriz = "SELECT matricula "
                        + "FROM aluno "
                        + "WHERE cpf=" + "'" + cpf + "'";
                con = new Conexao();
                rs = con.executaBusca(verificaMatriz);

                try {
                    if (rs.next()) {
                        matricula = rs.getString("matricula");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                    //Logger.getLogger(TelaCadastrarCurso.class.getName()).log(Level.SEVERE, null, ex);
                }

                //capturar o id do curso
                verificaMatriz = "SELECT * "
                        + "FROM cursos "
                        + "WHERE nome=" + "'" + nomeCurso + "'";
                con = new Conexao();
                rs = con.executaBusca(verificaMatriz);

                try {
                    if (rs.next()) {
                        idCurso = rs.getString("id_curso");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao manipular dados, verifique os dados");
                   //Logger.getLogger(TelaCadastrarCurso.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                tabela2 = "matriculado(matricula, data_da_matricula,numero_de_aulas,id_curso)";
                valores2 = "('" + matricula + "','" + dataMatricula + "','" + numeroAulas + "','" + idCurso + "')";

                resultado2 = inserir.inserirLinhasBD(tabela2, valores2);

                if (resultado > 0 && resultado2 > 0) {
                    JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso! \nMatrícula: " + matricula);
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao cadastrar funcionário!");
                }

            }

        }


    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    /**
     * AÇÃO AO CLICAR NO BOTÃO ATUALIZAR.
     *
     * @param evt
     */
    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        // TODO add your handling code here:
        OperacoesBancoDeDados atualizaDados = new OperacoesBancoDeDados();
        String tabela = "";
        String condicao = "";
        int aux = 0;

        if (this.tipoProcura.equals("CPF")) {
            tabela = "aluno";
            condicao = "cpf='" + this.procura + "'";
            aux = 1;
        }
        if (this.tipoProcura.equals("MATRICULA")) {
            tabela = "aluno";
            condicao = "matricula='" + this.procura + "'";
            aux = 1;
        }

        if (aux == 1) {
            String nome = jTextNome.getText();
            String cpf = jFCPF.getText();
            String identidade = jTextIdentidade.getText();
            String dataEm = jFDataEmissao.getText();
            String dataNasc = jFDataNasc.getText();
            String orgaoEx = jTextOrgao.getText();
            String sexo = jComboBoxSexo.getSelectedItem().toString();
            String tipoH = jComboBoxHablitacaoDesejada.getSelectedItem().toString();
            String rua = jTextRua.getText();
            String bairro = jTextBairro.getText();
            String numero = jTextNumero.getText();
            String CEP = jTextCEP.getText();
            String cidade = jTextCidade.getText();

            String telefone1 = jFTelefone1.getText();
            String telefone2 = jFTelefone2.getText();

            atualizaDados.atualizarLinhasBD(tabela, "cpf", "'" + cpf + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "tipo_habilitacao", "'" + tipoH + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "nome", "'" + nome + "'", condicao);
           // atualizaDados.atualizarLinhasBD(tabela, "car_data_de_emissao", "'" + dataEm + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "car_orgao_expedidor", "'" + orgaoEx + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "car_numero", "'" + identidade + "'", condicao);
            //atualizaDados.atualizarLinhasBD(tabela, "data_nasc", "'" + dataNasc + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "sexo", "'" + sexo + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "tel_telefone1", "'" + telefone1 + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "tel_telefone2", "'" + telefone2 + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "end_cep", "'" + CEP + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "end_cidade", "'" + cidade + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "end_rua", "'" + rua + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "end_numero", "'" + numero + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "end_bairro", "'" + bairro + "'", condicao);
            atualizaDados.atualizarLinhasBD(tabela, "id_aut", "'" + PermissaoAcesso.getIdAutoEscola() + "'", condicao);
            JOptionPane.showMessageDialog(null, "Atualização realizada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível realizar a atualização");
        }
        this.dispose();

    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    /**
     * AÇÃO AO CLICLAR NO BOTÃO EXCLUIR.
     *
     * @param evt
     */
    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:

        OperacoesBancoDeDados excluir = new OperacoesBancoDeDados();
        String tabela = "";
        //String tabela2 = "oferece";
        String condicao = "";
        int aux = 0;

        if (this.tipoProcura.equals("CPF")) {
            tabela = "aluno";
            condicao = "cpf='" + this.procura + "'";
            aux = 1;
        }
        if (this.tipoProcura.equals("MATRICULA")) {
            tabela = "aluno";
            condicao = "matricula='" + this.procura + "'";
            aux = 1;
        }
        if (aux == 1) {

            int resultado = excluir.deletarLinhasBD(tabela, condicao);

            if (resultado > 0) {

                JOptionPane.showMessageDialog(null, "Excluido com sucesso");
                this.dispose();

            } else {
                JOptionPane.showMessageDialog(null, "Erro durante a exclusão. Tente novamente!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Erro durante a exclusão. Tente novamente!");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jFDataMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFDataMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFDataMatriculaActionPerformed

    private void jComboBoxCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCursosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCursosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxCursos;
    private javax.swing.JComboBox<String> jComboBoxHablitacaoDesejada;
    private javax.swing.JComboBox<String> jComboBoxSexo;
    private javax.swing.JFormattedTextField jFCPF;
    private javax.swing.JFormattedTextField jFDataEmissao;
    private javax.swing.JFormattedTextField jFDataMatricula;
    private javax.swing.JFormattedTextField jFDataNasc;
    private javax.swing.JFormattedTextField jFNumeroAulas;
    private javax.swing.JFormattedTextField jFTelefone1;
    private javax.swing.JFormattedTextField jFTelefone2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDataMatricula;
    private javax.swing.JLabel jLabelDataNasc;
    private javax.swing.JLabel jLabeldataEmissao;
    private javax.swing.JPanel jPanelContato;
    private javax.swing.JPanel jPanelDadosPessoais;
    private javax.swing.JTextField jTextBairro;
    private javax.swing.JTextField jTextCEP;
    private javax.swing.JTextField jTextCidade;
    private javax.swing.JTextField jTextIdentidade;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JTextField jTextNumero;
    private javax.swing.JTextField jTextOrgao;
    private javax.swing.JTextField jTextRua;
    // End of variables declaration//GEN-END:variables
}

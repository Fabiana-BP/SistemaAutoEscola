/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import ConexaoPostgres.Conexao;
import codigo.HashSenha;
import codigo.OperacoesBancoDeDados;
import codigo.PermissaoAcesso;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class TelaCadastrarUsuarioSenha extends javax.swing.JInternalFrame {

    String cpfCadastrado = "";

    /**
     * Creates new form TelaPermissoes
     */
    public TelaCadastrarUsuarioSenha() {
        initComponents();
        jPanelAmpliarPermissoes.setVisible(false);
    }

    /**
     * Dimensionar a tela no centro.
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldCPF = new javax.swing.JFormattedTextField();
        jPasswordFieldConfirmarSenha = new javax.swing.JPasswordField();
        jTextFieldUser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jButtonSalvarCadastro = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxProfissional = new javax.swing.JComboBox<>();
        jButtonCancelarCadastro = new javax.swing.JButton();
        jPanelAmpliarPermissoes = new javax.swing.JPanel();
        jCheckBoxModificacoes = new javax.swing.JCheckBox();
        jButtonSalvarPermissao = new javax.swing.JButton();
        jButtonCancelarPermissao = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastrar Login");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro/Alterar Cadastro"));

        jLabel1.setText("CPF:");

        jLabel2.setText("User:");

        jLabel3.setText("Senha:");

        try {
            jFormattedTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Confirmar Senha:");

        jButtonSalvarCadastro.setText("SALVAR");
        jButtonSalvarCadastro.setPreferredSize(new java.awt.Dimension(100, 44));
        jButtonSalvarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarCadastroActionPerformed(evt);
            }
        });

        jLabel6.setText("Profissional:");

        jComboBoxProfissional.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Diretor", "Atendente", "Instrutor", " " }));

        jButtonCancelarCadastro.setText("CANCELAR");
        jButtonCancelarCadastro.setPreferredSize(new java.awt.Dimension(100, 44));
        jButtonCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCancelarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSalvarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jFormattedTextFieldCPF))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelAmpliarPermissoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Ampliar Permissões"));

        jCheckBoxModificacoes.setText("Cadrastros/Atualizações/Exclusões");

        jButtonSalvarPermissao.setText("SALVAR");
        jButtonSalvarPermissao.setPreferredSize(new java.awt.Dimension(100, 44));
        jButtonSalvarPermissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarPermissaoActionPerformed(evt);
            }
        });

        jButtonCancelarPermissao.setText("CANCELAR");
        jButtonCancelarPermissao.setPreferredSize(new java.awt.Dimension(100, 44));
        jButtonCancelarPermissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarPermissaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAmpliarPermissoesLayout = new javax.swing.GroupLayout(jPanelAmpliarPermissoes);
        jPanelAmpliarPermissoes.setLayout(jPanelAmpliarPermissoesLayout);
        jPanelAmpliarPermissoesLayout.setHorizontalGroup(
            jPanelAmpliarPermissoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAmpliarPermissoesLayout.createSequentialGroup()
                .addComponent(jCheckBoxModificacoes)
                .addGap(42, 42, 42)
                .addComponent(jButtonCancelarPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSalvarPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAmpliarPermissoesLayout.setVerticalGroup(
            jPanelAmpliarPermissoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAmpliarPermissoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonSalvarPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonCancelarPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jCheckBoxModificacoes))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelAmpliarPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelAmpliarPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Cadastro de Login");
        jPanelAmpliarPermissoes.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarCadastroActionPerformed
        String cpf = "";
        String profissional = "";
        String user = "";
        String senha = "";
        LinkedList<String> users = new LinkedList<>();
        LinkedList<String> cpfs = new LinkedList<>();
        int aux = 0;
        int acesso = 0;//1 para instrutor 2 para diretor e 3 para atendente

        //verificar se todos os campos foram preenchidos
        if (jComboBoxProfissional.getSelectedIndex() != 0 && !jFormattedTextFieldCPF.getText().equals("   .   .   -  ") && !jTextFieldUser.getText().equals("")
                && !jPasswordFieldSenha.getText().equals("") && !jPasswordFieldConfirmarSenha.getText().equals("")) {

            //verificar se cpf existe no banco
            cpf = jFormattedTextFieldCPF.getText();
            profissional = jComboBoxProfissional.getSelectedItem().toString();
            ResultSet rs = null;
            Conexao con = new Conexao();
            String verificaCPF = "SELECT F.cpf_func FROM funcionario F," + profissional + " P WHERE F.cpf_func=P.cpf_func  AND F.cpf_func='" + cpf + "' AND F.id_aut=" + PermissaoAcesso.getIdAutoEscola();
            rs = con.executaBusca(verificaCPF);
            try {
                while (rs.next()) {
                    if (cpf.equals(rs.getString("cpf_func"))) {
                        aux = 1;
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            //verificar user na tabela permissao
            rs = null;
            con = new Conexao();
            String buscarUsers = "SELECT nome_user,cpf_func from permissao where id_aut=" + PermissaoAcesso.getIdAutoEscola();
            rs = con.executaBusca(buscarUsers);
            try {
                while (rs.next()) {
                    String nome_user = rs.getString("nome_user");
                    String cpf_func = rs.getString("cpf_func");
                    users.add(nome_user);
                    cpfs.add(cpf_func);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

            if (aux == 0) {
                JOptionPane.showMessageDialog(null, "Acesso negado! Por favor revise o cpf, o profissional, e se o usuário pertence a este CFC!");
                jComboBoxProfissional.setSelectedIndex(0);
                jFormattedTextFieldCPF.setText("");
                jTextFieldUser.setText("");
                jPasswordFieldSenha.setText("");
                jPasswordFieldConfirmarSenha.setText("");
                profissional = "";
                cpf = "";

            } else {
                //verificar permissao acesso
                switch (profissional) {
                    case "Instrutor":
                        acesso = 1;
                        break;
                    case "Diretor":
                        acesso = 2;
                        break;
                    default:
                        acesso = 3;
                        break;
                }

                //verificar user
                int cont = 0;
                for (int i = 0; i < users.size(); i++) {
                    if (users.get(i).equals(jTextFieldUser.getText())) {
                        cont = 1;
                        if (cpfs.get(i).equals(cpf)) {
                            JOptionPane.showMessageDialog(null, "Usuário já cadastrado!");
                            jComboBoxProfissional.setSelectedIndex(0);
                            jFormattedTextFieldCPF.setText("");
                            jTextFieldUser.setText("");
                            jPasswordFieldSenha.setText("");
                            jPasswordFieldConfirmarSenha.setText("");
                            cont = 2;
                            break;
                        }
                    }
                }
                if (cont == 1) {
                    JOptionPane.showMessageDialog(null, "Nome de user já existe. Por favor, insira novo User!");
                    jTextFieldUser.setText("");
                } else if (cont == 0) {
                    if (jPasswordFieldSenha.getText().equals(jPasswordFieldConfirmarSenha.getText())) {

                        //criptografar senha
                        HashSenha hash = new HashSenha();
                        senha = hash.hashSenha(jPasswordFieldSenha.getText());

                        // tudo ok, pode inserir os dados
                        int resultado = 0;
                        OperacoesBancoDeDados cadastrar = new OperacoesBancoDeDados();
                        String tabela = "permissao(nome_user,senha_user,cpf_func,id_aut,tipo_acesso,acesso_login)";
                        String valores = "('" + jTextFieldUser.getText() + "','" + jPasswordFieldSenha.getText() + "','" + cpf + "'," + PermissaoAcesso.getIdAutoEscola() + "," + acesso + ",0)";
                        resultado = cadastrar.inserirLinhasBD(tabela, valores);
                        if (resultado > 0) {
                            //se for diretor pode escolher ter mais poder dentro do software
                            if (profissional.equals("Diretor")) {
                                Object[] options = {"Sim", "Não"};
                                int opcao = JOptionPane.showOptionDialog(null, "Usuario cadastrado com sucesso. Deseja ampliar acesso?", "", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                                if (opcao == 0) {
                                    jComboBoxProfissional.setEnabled(false);
                                    jFormattedTextFieldCPF.setEnabled(false);
                                    jTextFieldUser.setEnabled(false);
                                    jPasswordFieldSenha.setEnabled(false);
                                    jPasswordFieldConfirmarSenha.setEnabled(false);

                                } else if (opcao == 1) {
                                    cpfCadastrado = jFormattedTextFieldCPF.getText();
                                    JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso!");
                                    dispose();
                                }

                            } else {//se for outro profissional terá permissão padrao para sua função;
                                JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso!");
                                dispose();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Erro durante cadastro tente novamente!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Senha não confere!");
                        jPasswordFieldSenha.setText("");
                        jPasswordFieldConfirmarSenha.setText("");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ainda há campos para serem preenchidos!");
        }
    }//GEN-LAST:event_jButtonSalvarCadastroActionPerformed

    private void jButtonCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarCadastroActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelarCadastroActionPerformed

    private void jButtonCancelarPermissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarPermissaoActionPerformed
        JOptionPane.showMessageDialog(null, "O usuário foi cadastrado com permissão padrão para sua função!");
        dispose();
    }//GEN-LAST:event_jButtonCancelarPermissaoActionPerformed

    private void jButtonSalvarPermissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarPermissaoActionPerformed
        //Diretor pode ampliar poder de acesso se desejar:
        if (jCheckBoxModificacoes.isSelected()) {
            //modifica permissão de acesso
            String acesso = "4";
            int resultado = 0;
            OperacoesBancoDeDados atualizarAcesso = new OperacoesBancoDeDados();
            String condicao = "cpf_func='" + jFormattedTextFieldCPF.getText() + "'";
            resultado = atualizarAcesso.atualizarLinhasBD("permissao", "tipo_acesso", acesso, condicao);
            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso!");
                dispose();
            } else {
                System.out.println("cpfCadastrado=" + jFormattedTextFieldCPF.getText());
                JOptionPane.showMessageDialog(null, "Erro ao ampliar permissões. Usuário com acesso padrão para sua função!");
                dispose();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma opção selecionada! Por favor, marque alguma opção ou cancele a operação!");
        }
    }//GEN-LAST:event_jButtonSalvarPermissaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelarCadastro;
    private javax.swing.JButton jButtonCancelarPermissao;
    private javax.swing.JButton jButtonSalvarCadastro;
    private javax.swing.JButton jButtonSalvarPermissao;
    private javax.swing.JCheckBox jCheckBoxModificacoes;
    private javax.swing.JComboBox<String> jComboBoxProfissional;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAmpliarPermissoes;
    private javax.swing.JPasswordField jPasswordFieldConfirmarSenha;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JTextField jTextFieldUser;
    // End of variables declaration//GEN-END:variables
}
